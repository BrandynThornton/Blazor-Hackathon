@model Hello

<h1>Counter</h1>

<p>This is a simple example of a component.</p>

<p>
    Current count: <strong>@Model.AnotherProperty</strong> &nbsp;
    <button @onclick(IncrementCount)>Increment</button>
</p>

<p>It's also possible to include child components, pass data to them, and receive callbacks from them:</p>

<counter-display current-count=@currentCount
                 on-reset=@((Action)OnResetCounter) />

@functions {
    int currentCount;

    void IncrementCount()
    {
        object val;
        if (!ViewData.TryGetValue("hello", out val))
        {
            ViewData["hello"] = 0;
        }
        ViewData["hello"] = (int) ViewData["hello"] + 1;
    }
    int asdf()
    {

        return 5;
    }

    void OnResetCounter()
    {
        currentCount = (int)ViewData["hello"];

        Render();
    }

    public class Hello
    {
        public int MyProperty { get; set; }
        public string AnotherProperty { get; set; }
    }
}
